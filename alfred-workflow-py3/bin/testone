#!/bin/bash

rootdir="$( cd "$( dirname "$0" )/../"; pwd )"


usage() {
  cat > /dev/stderr <<EOS
testone <package.name> <tests/test_script.py>...

Run test script(s) with coverage for one package.

Usage:
    testone [-v|-V] <package.name> <test_script.py>...
    testone -h

Options:
    -v  verbose output
    -V  very verbose output
    -h  show this message and exit

Example:
    testone workflow.notify tests/test_notify.py

EOS
}

if [ -t 1 ]; then
  red='\033[0;31m'
  green='\033[0;32m'
  nc='\033[0m'
else
  red=
  green=
  nc=
fi

function log() {
    echo "$@"
}

function fail() {
  printf "${red}$@${nc}\n"
}

function success() {
  printf "${green}$@${nc}\n"
}

vopts=
while getopts ":hvV" opt; do
  case $opt in
    h)
      usage
      exit 0
      ;;
    v)
      vopts="-v"
      ;;
    V)
      vopts="-vv"
      ;;
    \?)
      log "Invalid option: -$OPTARG"
      exit 1
      ;;
  esac
done
shift $((OPTIND-1))


if [[ "$1" = "" ]] || [[ "$2" = "" ]]; then
  fail "missing argument(s)"
  log ""
  usage
  exit 1
fi

package="$1"
shift

# Run tests
pytest $vopts --cov="${package}" "$@"
# ret1=$?
ret1=${PIPESTATUS[0]}

echo

case "$ret1" in
  0) success "TESTS OK";;
  *) fail "TESTS FAILED";;
esac

log ""

# Test coverage
coverage report --fail-under 100 --show-missing
ret2=${PIPESTATUS[0]}

echo

case "$ret2" in
    0) success "COVERAGE OK" ;;
    *) fail "COVERAGE FAILED" ;;
esac

coverage erase

if [[ "$ret1" -ne 0 ]]; then
  exit $ret1
fi

exit $ret2
